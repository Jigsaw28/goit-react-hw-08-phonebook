{"version":3,"file":"static/js/331.f52e7a17.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const FormStyle = styled.form`\n    border: 1px black solid;\n    width: 300px;\n    padding: 10px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`\nexport const Input = styled.input`\n    padding: 5px;\n    margin-top: 5px;\n    margin-bottom: 20px;\n    outline: none;\n`\nexport const BtnDelete = styled.button`\n    background-color: #2196f3;\n    color: #fff;\n    cursor: pointer;\n    border-style: none;\n    padding: 10px 20px;\n    border-radius: 5px;\n`","import { nanoid } from 'nanoid';\nimport { FormStyle, Input, BtnDelete } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk } from 'redux/contactsThunk';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport const Form = ({ onSubmit }) => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(state => state.contacts);\n  let inputId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    }\n    const dublContact = items?.find(item => item.name === newContact.name);\n    if (dublContact) {\n      toast.error(`${newContact.name} is already in contacts`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n    dispatch(addContactsThunk(newContact));\n    toast.success('Contact successfully added', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n        theme: 'colored',\n    })\n    e.target.reset()\n  };\n\n  return (\n    <FormStyle onSubmit={handleSubmit}>\n      <label htmlFor={inputId}>Name</label>\n      <br></br>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        \n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <br></br>\n      <label htmlFor={inputId}>Number</label>\n      <br></br>\n      <Input\n        \n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <br></br>\n      <BtnDelete type=\"submit\" name=\"addContact\">\n        Add contact\n      </BtnDelete>\n      <ToastContainer />\n    </FormStyle>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Input = styled.input`\nmargin-top: 15px;\npadding: 5px 10px;\noutline: none;\nmargin-left: 15px;\n`;\n","// import PropTypes from 'prop-types'\nimport { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(state => state);\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  return (\n    <label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n      ></Input>\n    </label>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  list-style: disc;\n  padding-left: 30px;\n`;\nexport const Button = styled.button`\n  margin-left: 20px;\n  padding: 3px 10px;\n  border-radius: 5px;\n  border-style: none;\n  background-color: #2196f3;\n  color: #fff;\n\n  &:hover {\n    background-color: lightcoral;\n  }\n`;\nexport const Item = styled.li`\n  padding-bottom: 10px;\n`;\n","import { useEffect } from 'react';\nimport { List, Button, Item } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/contactsThunk';\nimport { Circles } from 'react-loader-spinner';\n\nexport const Contactlist = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error, isEmpty } = useSelector(\n    state => state.contacts\n  );\n  const { filter } = useSelector(state => state);\n  const filterName = items?.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    dispatch(deleteContactsThunk(id));\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#2196f3\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"Loader\"\n          visible={true}\n        />\n      )}\n      {error && <p>Oops!Something went wrong. Error: {error}</p>}\n      <List>\n        {items?.length > 0\n          ? filterName.map(item => (\n              <Item key={item.id}>\n                {item.name}: {item.number}\n                <Button\n                  type=\"button\"\n                  aria-label=\"Close\"\n                  onClick={() => handleDelete(item.id)}\n                >\n                  Delete\n                </Button>\n              </Item>\n            ))\n          : isEmpty && <p>Your contact book is empty</p>}\n      </List>\n    </>\n  );\n};\n","import { styled } from \"styled-components\";\n\nexport const ContainerContacts = styled.div`\n    padding: 0 20px;\n`","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contactlist } from 'components/ContactList/ContactList';\nimport { ContainerContacts } from './ContactsPage.styled';\nimport { getContactsThunk } from 'redux/contactsThunk';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector(state => state.auth);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getContactsThunk());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return  (\n    <ContainerContacts>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contactlist />\n    </ContainerContacts>\n  ) \n};\n\nexport default ContactsPage;\n"],"names":["FormStyle","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","BtnDelete","_templateObject3","Form","_ref","onSubmit","dispatch","useDispatch","items","useSelector","state","contacts","inputId","nanoid","_jsxs","e","preventDefault","newContact","name","target","elements","value","number","find","item","toast","concat","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContactsThunk","reset","children","_jsx","htmlFor","type","pattern","title","required","ToastContainer","Filter","filter","onChange","setFilter","currentTarget","List","Button","Item","Contactlist","_useSelector","isLoading","error","isEmpty","filterName","toLowerCase","includes","useEffect","getContactsThunk","_Fragment","Circles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","length","map","onClick","id","deleteContactsThunk","ContainerContacts","isLoggedIn","auth"],"sourceRoot":""}